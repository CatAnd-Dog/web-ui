name: Docker Image CI

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      
      - name: Build and push Docker image
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [ "$BRANCH_NAME" == "main" ]; then
            # 为不同架构使用不同的Dockerfile构建
            docker buildx build --push \
              --platform linux/amd64 \
              --tag ${{ secrets.DOCKER_USERNAME }}/browseruse:$(date +%Y%m%d)-amd64 \
              --tag ${{ secrets.DOCKER_USERNAME }}/browseruse:latest-amd64 \
              -f Dockerfile .
            
            docker buildx build --push \
              --platform linux/arm64/v8 \
              --tag ${{ secrets.DOCKER_USERNAME }}/browseruse:$(date +%Y%m%d)-arm64 \
              --tag ${{ secrets.DOCKER_USERNAME }}/browseruse:latest-arm64 \
              -f Dockerfile.arm64 .
            
            # 创建多架构清单
            docker manifest create ${{ secrets.DOCKER_USERNAME }}/browseruse:$(date +%Y%m%d) \
              --amend ${{ secrets.DOCKER_USERNAME }}/browseruse:$(date +%Y%m%d)-amd64 \
              --amend ${{ secrets.DOCKER_USERNAME }}/browseruse:$(date +%Y%m%d)-arm64
              
            docker manifest create ${{ secrets.DOCKER_USERNAME }}/browseruse:latest \
              --amend ${{ secrets.DOCKER_USERNAME }}/browseruse:latest-amd64 \
              --amend ${{ secrets.DOCKER_USERNAME }}/browseruse:latest-arm64
              
            docker manifest push ${{ secrets.DOCKER_USERNAME }}/browseruse:$(date +%Y%m%d)
            docker manifest push ${{ secrets.DOCKER_USERNAME }}/browseruse:latest
          else
            # 对于非主分支，同样分开构建
            docker buildx build --push \
              --platform linux/amd64 \
              --tag ${{ secrets.DOCKER_USERNAME }}/browseruse:$BRANCH_NAME-amd64 \
              -f Dockerfile .
              
            docker buildx build --push \
              --platform linux/arm64/v8 \
              --tag ${{ secrets.DOCKER_USERNAME }}/browseruse:$BRANCH_NAME-arm64 \
              -f Dockerfile.arm64 .
              
            # 创建分支的多架构清单
            docker manifest create ${{ secrets.DOCKER_USERNAME }}/browseruse:$BRANCH_NAME \
              --amend ${{ secrets.DOCKER_USERNAME }}/browseruse:$BRANCH_NAME-amd64 \
              --amend ${{ secrets.DOCKER_USERNAME }}/browseruse:$BRANCH_NAME-arm64
              
            docker manifest push ${{ secrets.DOCKER_USERNAME }}/browseruse:$BRANCH_NAME
          fi

      - name: Inspect buildx builder
        run: docker buildx inspect --bootstrap
